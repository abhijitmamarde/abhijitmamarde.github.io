<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Datepicker on Abhijit&#39;s Blog</title>
    <link>http://abhijit.mamarde.com/tags/datepicker/index.xml</link>
    <description>Recent content in Datepicker on Abhijit&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <atom:link href="http://abhijit.mamarde.com/tags/datepicker/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using datepicker with Vuejs2</title>
      <link>http://abhijit.mamarde.com/post/vuejs_and_datepicker/</link>
      <pubDate>Thu, 13 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://abhijit.mamarde.com/post/vuejs_and_datepicker/</guid>
      <description>

&lt;h1 id=&#34;using-datepicker-with-vuejs2&#34;&gt;Using datepicker with Vuejs2&lt;/h1&gt;

&lt;p&gt;Ok, so I am learning/exploring &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vuejs&lt;/a&gt; now a days. It&amp;rsquo;s a great &lt;code&gt;MVVM&lt;/code&gt; framework which is light-weight and simple to learn. Simple enough to start &lt;strong&gt;without any background&lt;/strong&gt; with other similar Javascript frameworks.&lt;/p&gt;

&lt;p&gt;After going through initial code samples and tutorials, I wanted to go for more. At around same time, working on one side project, I needed to integrate &lt;a href=&#34;https://github.com/uxsolutions/bootstrap-datepicker&#34;&gt;bootstrap-datepicker&lt;/a&gt; with Vuejs. Did some search online, but couldn&amp;rsquo;t find any working solution along with Vuejs2. So this is how I managed to do it.&lt;/p&gt;

&lt;p&gt;First let&amp;rsquo;s see the code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Vue.component(&#39;datepicker&#39;, {

template: `
    &amp;lt;div class=&amp;quot;input-group date&amp;quot;&amp;gt;
    &amp;lt;input type=&amp;quot;text&amp;quot; class=&amp;quot;form-control&amp;quot;&amp;gt;
    &amp;lt;span class=&amp;quot;input-group-addon&amp;quot;&amp;gt;
        &amp;lt;i class=&amp;quot;glyphicon glyphicon-calendar&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
    &amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;
    `,

props: [&#39;updater&#39;, &#39;default&#39;],

mounted: function(){

    //!important, as `this` is not available in the context below
    var t = this;
    var dp = $(this.$el.children[0]);

    if(t.default) {
        store.commit(t.updater, t.default)
        $(this.$el.children[0]).val(t.default)
    }

    dp.datepicker({
        format: date_format.toLowerCase(),  
        autoclose: true
    }).on(&#39;changeDate&#39;, function(e) {
        store.commit(t.updater, moment(e.date).format(date_format))
    });

    t.$on(&#39;reset&#39;, function(date_reset) {
      // console.log(&#39;reset called for:&#39; + t.updater + &amp;quot; date:&amp;quot; + date_reset)
      store.commit(t.updater, date_reset)

      //to set the datepicker (date in textbox + last set valdate)
      dp.val(date_reset)
      dp.data({date: date_reset})
      dp.datepicker(&#39;update&#39;)
    });

},

});
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;details&#34;&gt;Details&lt;/h2&gt;

&lt;p&gt;The whole idea is, using vuejs, create a custom &lt;code&gt;component&lt;/code&gt; so that, we can define any number of &lt;code&gt;datepicker&lt;/code&gt; controls. For ex: the code below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;datepicker ref=&amp;quot;startDate&amp;quot; updater=&amp;quot;setStartDate&amp;quot; default=&amp;quot;2016-12-01&amp;quot;&amp;gt;
&amp;lt;/datepicker&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Would simply create the datepicker control with default date populated as mentioned and would set the value in &lt;code&gt;startDate&lt;/code&gt; data varaible. The &lt;code&gt;updater&lt;/code&gt; mentions which store mutation/method would be called when the date is changed (by clicking in the datepicker event).&lt;/p&gt;

&lt;p&gt;Here, an additional event &lt;code&gt;reset&lt;/code&gt; is handled, which when emited, would call the require store mutation + setting the text value in date input field.&lt;/p&gt;

&lt;p&gt;Here, &lt;code&gt;jquery&lt;/code&gt; is used for initializing the datepicker control (&lt;em&gt;Remember:&lt;/em&gt; bootstrap-datepicker requires it!) as well as to set the date value in datepicker from vuejs. Say on clicking a button (ex: setting to today&amp;rsquo;s date)&lt;/p&gt;

&lt;p&gt;One more point to note here, for selecting the input field in our template, we have used:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-jquery&#34;&gt;$(this.$el.children[0])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which means, the actual &lt;code&gt;input&lt;/code&gt; field which we are initializing as datepicker, is the first children from our template&amp;rsquo;s root element:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- root element of template --&amp;gt;
&amp;lt;div class=&amp;quot;input-group date&amp;quot;&amp;gt;
    &amp;lt;!-- input: first child under the root element --&amp;gt;
    &amp;lt;input type=&amp;quot;text&amp;quot; class=&amp;quot;form-control&amp;quot;&amp;gt;
    ...
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thus, this would obviously change if the template is changed. &lt;em&gt;Keep a note of that!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, that&amp;rsquo;s all about it. I have tried to pen down my first experience with vuejs!&lt;/p&gt;

&lt;p&gt;Please do visit to my &lt;a href=&#34;https://github.com/abhijitmamarde/vuejs_demos&#34;&gt;vuejs-demo&lt;/a&gt; repo for the complete working code (and others).&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>